name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongo --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Install backend dependencies
      - name: Install Backend Dependencies
        working-directory: ./backend
        run: npm install

      # Run backend tests (if any)
      - name: Run Backend Tests
        working-directory: ./backend
        run: npm test

      # Install frontend dependencies
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm install

      # Build frontend
      - name: Build Frontend
        working-directory: ./frontend
        run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Deploy Backend
      - name: Deploy Backend
        run: |
          ssh user@your-server "cd /path/to/backend && git pull && npm install && pm2 restart server.js"

      # Deploy Frontend
      - name: Deploy Frontend
        run: |
          ssh user@your-server "cd /path/to/frontend && git pull && cp -r ./build /var/www/html"
